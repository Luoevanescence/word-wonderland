version: '3.8'

# 从 GitHub 直接构建部署配置(windows docker desktop 不支持)
# 使用方法：docker-compose -f docker-compose.github.yml up -d
# 注意：请将 YOUR_GITHUB_USERNAME 替换为你的 GitHub 用户名

services:
  # 后端 API 服务
  backend:
    build:
      # 从 GitHub 仓库构建，格式：https://github.com/user/repo.git#branch:subdirectory
      context: https://github.com/Luoevanescence/word-wonderland.git#main:word-wonderland-backend
      dockerfile: Dockerfile
    container_name: word-wonderland-backend
    ports:
      - "3000:3000"
    volumes:
      # 使用命名存储卷持久化数据（推荐用于生产环境）
      - words-data:/app/data
      # 或使用绑定挂载（便于直接访问文件）：
      # - ./data:/app/data
    environment:
      # 管理员账号配置
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      # JWT 配置
      - JWT_SECRET=${JWT_SECRET:-word-wonderland-secret-key-2024}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      # 服务器配置
      - PORT=3000
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - word-wonderland-network

  # 管理员后台
  admin:
    build:
      context: https://github.com/Luoevanescence/word-wonderland.git#main:word-wonderland-admin
      dockerfile: Dockerfile
    container_name: word-wonderland-admin
    ports:
      - "5173:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - word-wonderland-network

  # 学生端应用
  app:
    build:
      context: https://github.com/Luoevanescence/word-wonderland.git#main:word-wonderland-app
      dockerfile: Dockerfile
    container_name: word-wonderland-app
    ports:
      - "5174:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - word-wonderland-network

networks:
  word-wonderland-network:
    driver: bridge

volumes:
  # 命名存储卷 - 用于持久化后端数据
  words-data:
    driver: local

